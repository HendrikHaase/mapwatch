name: push-deploy
on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy-www:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-nodejs
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: yarn --frozen-lockfile
      - run: yarn test
      - run: yarn build --ignore @mapwatch/electron2
      - run: find packages/www/build

      # https://github.com/marketplace/actions/deploy-to-github-pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_NAME: mapwatch/mapwatch.github.io
          BRANCH: master
          FOLDER: packages/mapwatch.github.io/

      # https://github.com/marketplace/actions/s3-sync?version=v0.5.1
      # 1) delete old files, and upload cacheable things: everything but the root html file
      - name: S3 Sync - push cacheable files, delete old files
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude '*.html' --cache-control max-age=86400,public --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: mapwatch.erosson.org
          AWS_REGION: us-east-1
          SOURCE_DIR: packages/www/build/
      # 2) upload non-cacheable things: the root html file
      - name: S3 Sync - push non-cacheable files
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude '*' --include '*.html' --cache-control no-cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: mapwatch.erosson.org
          AWS_REGION: us-east-1
          SOURCE_DIR: packages/www/build/
  deploy-electron-windows:
    # https://github.com/marketplace/actions/electron-builder-action
    runs-on: windows-latest
    # needs: deploy-www
    steps:
      - uses: actions/checkout@v3
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-nodejs
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: yarn --frozen-lockfile --network-timeout 100000
      - run: yarn test
      # `yarn build` the website. Required for the electron-builder action.
      - run: yarn build --ignore @mapwatch/electron2
      - name: Electron Builder Action
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          package_root: packages/electron2
          # don't run our electron package's `yarn build`.
          # it runs `electron-builder` - but `action-electron-builder` does that,
          # and it's better integrated with github actions (runs faster, doesn't
          # crash)
          skip_build: true
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Match `yarn build:windows`'s arguments
          args: --win --x64
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          # electron-builder has always been a bit flaky for me
          max_attempts: 3
  deploy-electron-linux:
    # https://github.com/marketplace/actions/electron-builder-action
    runs-on: ubuntu-latest
    # needs: deploy-www
    steps:
      - uses: actions/checkout@v3
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-nodejs
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: yarn --frozen-lockfile --network-timeout 100000
      - run: yarn test
      # `yarn build` the website. Required for the electron-builder action.
      - run: yarn build --ignore @mapwatch/electron2
      - name: Electron Builder Action
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          package_root: packages/electron2
          # don't run our electron package's `yarn build`.
          # it runs `electron-builder` - but `action-electron-builder` does that,
          # and it's better integrated with github actions (runs faster, doesn't
          # crash)
          skip_build: true
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Match `yarn build:linux`'s arguments
          args: --linux deb tar.gz AppImage --x64
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          # electron-builder has always been a bit flaky for me
          max_attempts: 3
